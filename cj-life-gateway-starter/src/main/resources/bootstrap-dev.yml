spring:
  config:
    import:
      - optional:redis/redis-dev.yml
      - optional:security/security-dev.yml
  cloud:
    config:
      #写死指向配置中心地址
      uri: http://localhost:8861
      #      #通过注册中心自动发现配置中心地址，注意它会获取到docker内的ip这样就会加载错误
      #      discovery: #config配置中心高可用
      #        # 开启 Config 服务发现与注册
      #        enabled: true
      #        # 指定 server
      #        service-id: CJ-LIFE-CONFIG-SERVER #注册到Eureka的配置中心微服务名称
      profile: dev
      label: master
  #      username:
  #      password:
eureka:
  client:
    register-with-eureka: true  # 是否向注册中心注册自己
    fetchRegistry: true   # 是否从注册中心抓取已有的注册信息，默认true，集群必须设置为true
    service-url:
      # 集群中各个服务注册中心的地址，实际上先一个节点即可，因为服务器集群会复制提供者信息。
      defaultZone: ${cj.life.EUREKA_SERVER_URL:http://localhost:8761/eureka}
  instance:
    instance-id: ${spring.application.name:cj-life-gateway}/${server.port}	 # 服务实例Id
    prefer-ip-address: true
    #调用者feign只认spring.application.name，不认此处配置应用名
    #所以不论服务提供者还是feign消费者，spring.application.name和eureka.instance.appname都配置就最好了
    #feign调用方大小写不区分，而注册中心永远显示为大写
    #eureka.instance.appname的配置名在注册中心会覆盖spring.application.name而显示，但feign认只spring.application.name
    appname: ${spring.application.name:cj-life-gateway}
    #注册中心点状态跳转到swagger
    status-page-url: http://${spring.cloud.client.ip-address}:${server.port}${server.servlet.context-path}doc.html
#    hostname: ${life.hostname:localhost}